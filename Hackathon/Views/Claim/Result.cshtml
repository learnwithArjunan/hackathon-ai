@{
    var claim = ViewBag.Claim as Hackathon.Models.ClaimData;
    var result = ViewBag.Result as Hackathon.Models.ValidationResult;
    var ocrText = ViewBag.RawText as string;
    var name = ViewBag.Name as string;
    var status = ViewBag.Status as string;
}

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h4 class="card-title text-center mb-3">Claim Result for <span class="text-primary">@name</span></h4>

        <div class="mb-3">
            <p class="mb-1"><strong>Date:</strong> @claim.Date</p>
            <p class="mb-1"><strong>Hospital:</strong> @claim.Hospital</p>
            <p class="mb-1"><strong>Diagnosis:</strong> @claim.Diagnosis</p>
        </div>

        <h5 class="mt-4 mb-3">Status : <span class="text-danger">@status</span></h4></h5>
        <ul class="list-group list-group-flush">
            <li class="list-group-item d-flex justify-content-between">
                <span>Date Valid</span>
                <span class="fw-bold">@((result.IsDateValid ? "✅" : "❌"))</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <span>Hospital Approved</span>
                <span class="fw-bold">@((result.IsHospitalApproved ? "✅" : "❌"))</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <span>Diagnosis Covered</span>
                <span class="fw-bold">@((result.IsDiagnosisCovered ? "✅" : "❌"))</span>
            </li>
        </ul>
    </div>
</div>

@if (ViewBag.NonPayableItems.Count > 0)
{
    <div class="alert alert-warning">
        <strong>Non-Claimable Items Detected:</strong>
        <ul>
            @foreach (var item in ViewBag.NonPayableItems)
            {
                <li>@item</li>
            }
        </ul>
        <p><strong>Amount Deducted:</strong> ₹@ViewBag.NonPayableAmount</p>
        <p><strong>Approved Claim Amount:</strong> ₹@ViewBag.ApprovedAmount</p>
    </div>
}


@* <h3>Chat with AI Assistant</h3>
<textarea id="userInput" rows="3" cols="50"></textarea><br />
<button onclick="ask()">Ask</button>
<p><strong>Answer:</strong> <span id="response"></span></p>

<script>
    async function ask() {
        const question = document.getElementById("userInput").value;
        const ocrText = `@ocrText`;
        const res = await fetch('/Claim/AskAssistant', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ question, ocrText })
        });
        const data = await res.json();
        document.getElementById("response").innerText = data.response;
    }
</script>  *@